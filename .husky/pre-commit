#!/bin/sh

# Secret scanning pre-commit hook
echo "üîç Running security checks..."

# Check for common secret patterns
SECRET_PATTERNS=(
  "password\s*=\s*[\"'][^\"']+[\"']"
  "api[_-]?key\s*=\s*[\"'][^\"']+[\"']"
  "secret\s*=\s*[\"'][^\"']+[\"']"
  "token\s*=\s*[\"'][^\"']+[\"']"
  "private[_-]?key"
  "BEGIN (RSA|DSA|EC|OPENSSH) PRIVATE KEY"
  "-----BEGIN (RSA|DSA|EC|OPENSSH|PGP) PRIVATE KEY"
  "aws[_-]?access[_-]?key[_-]?id"
  "aws[_-]?secret[_-]?access[_-]?key"
  "github[_-]?token"
  "sk_live_[0-9a-zA-Z]{24}"
  "pk_live_[0-9a-zA-Z]{24}"
)

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx|json|env|md)$' || true)

if [ -z "$STAGED_FILES" ]; then
  echo "‚úÖ No files to check"
else
  # Check each staged file for secrets
  FOUND_SECRETS=false
  for FILE in $STAGED_FILES; do
    # Skip test files and examples
    if [[ $FILE == *.test.* ]] || [[ $FILE == *.spec.* ]] || [[ $FILE == *.example ]]; then
      continue
    fi
    
    # Check for .env files (except .env.example)
    if [[ $FILE =~ \.env($|\.) ]] && [[ $FILE != ".env.example" ]]; then
      echo "‚ùå Environment file detected: $FILE"
      echo "   Environment files should not be committed!"
      FOUND_SECRETS=true
    fi
  done

  if [ "$FOUND_SECRETS" = true ]; then
    echo ""
    echo "‚ö†Ô∏è  Pre-commit hook failed: Potential secrets detected!"
    echo "   Please remove any sensitive information before committing."
    echo "   If this is a false positive, you can bypass with: git commit --no-verify"
    exit 1
  fi
fi

# Run lint-staged for code quality
npx lint-staged

echo "‚úÖ All pre-commit checks passed!"
