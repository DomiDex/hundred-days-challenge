#!/bin/sh

# Secret scanning pre-commit hook
echo "üîç Running security checks..."

# Check for common secret patterns
# Using grep patterns instead of array for sh compatibility

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx|json|env|md)$' || true)

if [ -z "$STAGED_FILES" ]; then
  echo "‚úÖ No files to check"
else
  # Check each staged file for secrets
  FOUND_SECRETS=false
  for FILE in $STAGED_FILES; do
    # Skip test files and examples
    case "$FILE" in
      *.test.*|*.spec.*|*.example)
        continue
        ;;
    esac
    
    # Check for .env files (except .env.example)
    case "$FILE" in
      .env|.env.*)
        if [ "$FILE" != ".env.example" ]; then
          echo "‚ùå Environment file detected: $FILE"
          echo "   Environment files should not be committed!"
          FOUND_SECRETS=true
        fi
        ;;
    esac
  done

  if [ "$FOUND_SECRETS" = true ]; then
    echo ""
    echo "‚ö†Ô∏è  Pre-commit hook failed: Potential secrets detected!"
    echo "   Please remove any sensitive information before committing."
    echo "   If this is a false positive, you can bypass with: git commit --no-verify"
    exit 1
  fi
fi

# Run lint-staged for code quality
npx lint-staged

echo "‚úÖ All pre-commit checks passed!"
